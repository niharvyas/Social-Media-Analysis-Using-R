View(top100_features)
data.frame(colnames(top100_features))
top100_features_subset <- top100_features[ , 6:17]
View(top100_features_subset)
top100_features_subset <- top100_features_subset %>% rename(track_id = track.id)
top100_features_subset["isArmaan"] <- 0
armaan_features_subset["isArmaan"] <- 1
top100_features_nodrake <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
comb_data <- rbind(top100_features_noarmaan, armaan_features_subset)
comb_data$isArmaan <- factor(comb_data$isArmaan)
comb_data <- select(comb_data, -track_id)
comb_data <- comb_data[sample(1:nrow(comb_data)), ]
split_point <- as.integer(nrow(comb_data)*0.8)
training_set <- comb_data[1:split_point, ]
testing_set <- comb_data[(split_point + 1):nrow(comb_data), ]
dt_model <- train(isArmaan~ ., data = training_set, method = "C5.0")
top100_features <- get_playlist_audio_features("spotify", "37i9dQZF1DX7I09vdUzaSD")
View(top100_features)
data.frame(colnames(top100_features))
top100_features_subset <- top100_features[ , 6:17]
top100_features_subset["isArmaan"] <- 0
top100_features_subset["isArmaan Malik"] <- 0
armaan_features_subset["isArmaan Malik"] <- 1
top100_features_noarmaan <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
top100_features_noarmaan <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
comb_data <- rbind(top100_features_noarmaan, armaan_features_subset)
armaan_features <- get_artist_audio_features("Armaan Malik")
View(armaan_features)
data.frame(colnames(armaan_features))
armaan_features_subset <- armaan_features[ , 9:20]
View(armaan_features_subset)
top100_features <- get_playlist_audio_features("spotify", "37i9dQZF1DX7I09vdUzaSD")
View(top100_features)
data.frame(colnames(top100_features))
top100_features_subset <- top100_features[ , 6:17]
View(top100_features_subset)
top100_features_subset <- top100_features_subset %>% rename(track_id = track.id)
top100_features_subset["isArmaan Malik"] <- 0
armaan_features_subset["isArmaan Malik"] <- 1
top100_features_noarmaan <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
comb_data <- rbind(top100_features_noarmaan, armaan_features_subset)
comb_data$isArmaan <- factor(comb_data$isArmaan)
comb_data$isArmaan Malik <- factor(comb_data$isArmaan Malik)
top100_features_subset["isArmaanMalik"] <- 0
armaan_features_subset["isArmaanMalik"] <- 1
top100_features_noarmaan <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
comb_data <- rbind(top100_features_noarmaan, armaan_features_subset)
comb_data$isArmaanMalik <- factor(comb_data$isArmaanMalik)
comb_data <- select(comb_data, -track_id)
comb_data <- comb_data[sample(1:nrow(comb_data)), ]
split_point <- as.integer(nrow(comb_data)*0.8)
training_set <- comb_data[1:split_point, ]
testing_set <- comb_data[(split_point + 1):nrow(comb_data), ]
dt_model <- train(isArmaanMaik~ ., data = training_set, method = "C5.0")
library(C50)
dt_model <- train(isArmaanMaik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik ~ ., data = training_set, method = "C5.0")
prediction_row <- 1 # MUST be smaller than or equal to training set size
if (tibble(predict(dt_model, testing_set[prediction_row, ])) ==
testing_set[prediction_row, 12]){
print("Prediction is correct!")
} else {
("Prediction is wrong")
}
dt_model <- train(isArmaanMali ~ ., data = training_set, method = "C5.0")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
install.packages('C50')
install.packages("C50")
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
library(spotifyr)
library(C50)
library(caret)
library(e1071)
library(dplyr)
app_id <- "2a65a39e2a32428abb4b11f7583e6047"
app_secret <- "9680d4b2bef244f0b1ff72f7ebb9c5c2"
token <- "1"
Sys.setenv(SPOTIFY_CLIENT_ID = app_id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = app_secret)
access_token <- get_spotify_access_token()
armaan_features <- get_artist_audio_features("Armaan Malik")
View(armaan_features)
data.frame(colnames(armaan_features))
armaan_features_subset <- armaan_features[ , 9:20]
View(armaan_features_subset)
top100_features <- get_playlist_audio_features("spotify", "37i9dQZF1DX7I09vdUzaSD")
View(top100_features)
data.frame(colnames(top100_features))
top100_features_subset <- top100_features[ , 6:17]
View(top100_features_subset)
top100_features_subset <- top100_features_subset %>% rename(track_id = track.id)
top100_features_subset["isArmaanMalik"] <- 0
armaan_features_subset["isArmaanMalik"] <- 1
top100_features_noarmaan <- anti_join(top100_features_subset,
armaan_features_subset,
by = "track_id")
comb_data <- rbind(top100_features_noarmaan, armaan_features_subset)
comb_data$isArmaanMalik <- factor(comb_data$isArmaanMalik)
comb_data <- select(comb_data, -track_id)
comb_data <- comb_data[sample(1:nrow(comb_data)), ]
split_point <- as.integer(nrow(comb_data)*0.8)
training_set <- comb_data[1:split_point, ]
testing_set <- comb_data[(split_point + 1):nrow(comb_data), ]
dt_model <- train(isArmaanMalik~ ., data = training_set, method = "C5.0")
prediction_row <- 1 # MUST be smaller than or equal to training set size
if (tibble(predict(dt_model, testing_set[prediction_row, ])) ==
testing_set[prediction_row, 12]){
print("Prediction is correct!")
} else {
("Prediction is wrong")
}
confusionMatrix(dt_model, reference = testing_set$isArmaan)
library(vosonSML)
library(magrittr)
library(tidytext)
library(textclean)
library(qdapRegex)
library(tm)
library(topicmodels)
library(slam)
library(Rmpfr)
library(dplyr)
library(ggplot2)
library(reshape2)
load("C:/Users/nihar/OneDrive/Desktop/Griffith University/Trimester-1/BDA and SM/Assignment/Milestone-1/my8000tweets.RData")
clean_text <- twitter_data$tweets$text  %>%
rm_twitter_url() %>%
replace_url() %>%
replace_hash() %>%
replace_tag() %>%
replace_internet_slang() %>%
replace_emoji() %>%
replace_emoticon() %>%
replace_non_ascii() %>%
replace_contraction() %>%
gsub("[[:punct:]]", " ", .) %>%
gsub("[[:digit:]]", " ", .) %>%
gsub("[[:cntrl:]]", " ", .) %>%
gsub("\\s+", " ", .) %>%
tolower()
text_corpus <- VCorpus(VectorSource(clean_text))
text_corpus[[1]]$content
text_corpus[[5]]$content
text_corpus <- text_corpus %>%
tm_map(removeWords, stopwords(kind = "lol"))
text_corpus <- text_corpus %>%
tm_map(removeWords, stopwords(kind = "LOL"))
text_corpus <- text_corpus %>%
tm_map(removeWords, stopwords(kind = "SMART"))
text_corpus[[1]]$content
text_corpus[[5]]$content
doc_term_matrix <- DocumentTermMatrix(text_corpus)
non_zero_entries = unique(doc_term_matrix$i)
dtm = doc_term_matrix[non_zero_entries,]
save(dtm, file = "doc_term_matrix_5_1.RData")
rm(list = ls(all.names = TRUE))
gc()
load("doc_term_matrix.RData")
load("C:/Users/nihar/OneDrive/Desktop/Griffith University/Trimester-1/BDA and SM/Assignment/Milestone-1/my8000tweets.RData")
clean_text <- twitter_data$tweets$text  %>%
rm_twitter_url() %>%
replace_url() %>%
replace_hash() %>%
replace_tag() %>%
replace_internet_slang() %>%
replace_emoji() %>%
replace_emoticon() %>%
replace_non_ascii() %>%
replace_contraction() %>%
gsub("[[:punct:]]", " ", .) %>%
gsub("[[:digit:]]", " ", .) %>%
gsub("[[:cntrl:]]", " ", .) %>%
gsub("\\s+", " ", .) %>%
tolower()
text_corpus <- VCorpus(VectorSource(clean_text))
text_corpus[[1]]$content
text_corpus[[5]]$content
text_corpus <- text_corpus %>%
tm_map(removeWords, stopwords(kind = "SMART"))
text_corpus[[1]]$content
text_corpus[[5]]$content
doc_term_matrix <- DocumentTermMatrix(text_corpus)
non_zero_entries = unique(doc_term_matrix$i)
dtm = doc_term_matrix[non_zero_entries,]
save(dtm, file = "doc_term_matrix_5_1.RData")
gc()
load("doc_term_matrix.RData")
lda_model <- LDA(dtm, k = 6)
tweet_topics <- tidy(lda_model, matrix = "beta")
top_terms <- tweet_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
load("doc_term_matrix_5_1.RData")
lda_model <- LDA(dtm, k = 6)
tweet_topics <- tidy(lda_model, matrix = "Artist Words")
tweet_topics <- tidy(lda_model, matrix = "ArtistWords")
tweet_topics <- tidy(lda_model, matrix = "gamma")
top_terms <- tweet_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
tweet_topics <- tidy(lda_model, matrix = "beta")
top_terms <- tweet_topics %>%
group_by(topic) %>%
slice_max(beta, n = 10) %>%
ungroup() %>%
arrange(topic, -beta)
top_terms %>%
mutate(term = reorder_within(term, beta, topic)) %>%
ggplot(aes(beta, term, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~ topic, scales = "free") +
scale_y_reordered()
save.image("C:/Users/nihar/OneDrive/Desktop/Griffith University/Trimester-1/BDA and SM/Assignment/Milestone-2/17052023.RData")
library(rtweet)
library(vosonSML)
library(igraph)
followers <- get_followers("ArmaanMalik22", n = 5000)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
twitter_data <- Authenticate("twitter",
appName = my_app_name,
apiKey = my_api_key,
apiSecret = my_api_secret,
accessToken = my_access_token,
accessTokenSecret = my_access_token_secret) %>%
Collect(searchTerm = "#ArmaanMalik OR #Armaanians OR #TeamArmaan OR #Armaaniansarmy",
searchType = "recent",
numTweets = 1000,
lang = "en",
includeRetweets = TRUE,
writeToFile = TRUE,
verbose = TRUE)
followers <- get_followers("ArmaanMalik22", n = 5000)
auth_as()
follower_count <- followers$followers_count
token <- create_token(
app = <my_app_name>,
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secr
\
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
follower_count <- followers$followers_count
graph <- graph.empty()
for (i in 1:length(followers$user_id)) {
graph <- graph + edge("ArmaanMalik22", followers$user_id[i])
}
set_vertex_attr(graph, "followers", value = follower_count)
for (i in 1:length(followers$user_id)) {
graph <- graph + edge("ArmaanMalik22", followers$user_id[i])
}
set_vertex_attr(graph, "followers", value = follower_count)
write_graph(graph, "ArmaanMalik22_network.graphml", format = "graphml")
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
follower_count <- followers$followers_count
twitter_actor_network <- followers %>% Create("actor")
View(followers)
follower_count <- followers$followers_count
twitter_actor_network <- followers %>% Create("actor")
twitter_actor_graph <- twitter_actor_network %>% Graph()
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
View(followers)
follower_count <- followers$followers_count
graph <- graph.empty()
for (i in 1:length(followers$from_id)) {
graph <- graph + edge("ArmaanMalik22", followers$from_id[i])
}
for (i in 1:length(followers$user_id)) {
graph <- graph + edge("ArmaanMalik22", as.character(followers$user_id[i]))
}
graph <- graph.empty()
for (i in 1:length(followers$from_id)) {
graph <- graph + edge("ArmaanMalik22", as.character(followers$from_id[i]))
}
for (i in 1:length(followers$to_id)) {
graph <- graph + edge("ArmaanMalik22", as.character(followers$to_id[i]))
}
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
View(followers)
graph <- graph.empty()
for (i in 1:length(followers$to_id)) {
graph <- graph + edge("ArmaanMalik22", as.character(followers$to_id[i]))
}
for (i in 1:length(followers$from_id)) {
graph <- graph + edge("ArmaanMalik22", as.character(followers$from_id[i]))
}
for (i in 1:length(followers$from_id)) {
graph <- graph + edge("ArmaanMalik22", followers$from_id[i])
}
twitter_actor_network <- followers %>% Create("actor")
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
ArmaanMalik22_graph <- graph(followers)
ArmaanMalik22_graph <- graph(as.character(followers))
write.graph(ArmaanMalik22_graph, file = "ArmaanMalik22_network.graphml", format = "graphml")
follower_count %>% count(from_id)
follower_count %>% length(from_id)
follower_count %>% followers$length(from_id)
follower_count %>% followers$count(from_id)
library(vosonSML)
library(igraph)
api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
access_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
twitter_auth <- vsm_oauth(api_key, api_secret, access_token, access_secret)
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
get_followers<-function( ArmaanMalik22,
n=5000,
screen_name= TRUE,
cursor="-1",
retryonratelimit=NULL,
parse=TRUE,
verbose=TRUE,
token=NULL,
page=lifecycle::deprecated() )
get_followers<-function( ArmaanMalik22,
n=5000,
cursor="-1",
retryonratelimit=NULL,
parse=TRUE,
verbose=TRUE,
token=NULL,
page=lifecycle::deprecated() )
followers <- get_followers("ArmaanMalik22", n = 5000)
as_screenname(followers)
followers(as_screenname("1638397566491475968"))
View(followers)
target_user <- "ArmaanMalik22"
followers <- lookup_users(user = target_user)$followers_count
print(followers)
followers <- get_followers("ArmaanMalik22", n = 5000)
target_user <- "ArmaanMalik22"
followers_number <- lookup_users(user = target_user)$followers_count
print(followers)
screen_names <- followers$screen_name
follower_ids <- get_followers(target_user, n = 5000)$user_id
follower_ids <- get_followers(target_user, n = 5000)$from_id
followers <- lookup_users(follower_ids)
screen_names <- followers$screen_name
View(screen_names)
print(screen_names)
view(followers_number)
followers_number <- lookup_users(user = target_user)'$followers_count'
followers_number <- lookup_users(user = target_user)
view(followers_number)
view(followers_number)
View(followers_number)
follower_ids <- get_followers(target_user, n = 5000)$from_id
followers <- lookup_users(follower_ids)
screen_names <- followers$screen_name
View(screen_names)
print(screen_names)
View(followers_number)
followers <- get_followers("ArmaanMalik22", n = 5000)
View(followers)
screen_names
target_user <- "ArmaanMalik22"
followers_number <- lookup_users(user = target_user)
View(followers_number)
follower_ids <- get_followers(target_user, n = 5000)$from_id
followers <- lookup_users(follower_ids)
screen_names <- followers$screen_name
ArmaanMalik22_graph <- graph(screen_names)
write.graph(ArmaanMalik22_graph, file = "ArmaanMalik22_network.graphml", format = "graphml")
library(rtweet)
library(vosonSML)
library(igraph)
my_app_name <- "Bhargav's App"
my_api_key <- "p1KmjEViWzndP4SHhsm6ICmAt"
my_api_secret <- "KmgeszLWKfNXtjEav1spzenDHlAmpTRqlpWy2vhSE7RMlPlWWS"
my_access_token <- "1445954253437112326-ztTRkutOCmknlKVmc1KpQp6NFn8PJH"
my_access_token_secret <- "rBAaFuvKyddwGAqwMsQybdqnwQOZ0USNF2aXDuaDVaLsV"
token <- create_token(
app = my_app_name,
consumer_key = my_api_key,
consumer_secret = my_api_secret,
access_token = my_access_token,
access_secret = my_access_token_secret)
followers <- get_followers("ArmaanMalik22", n = 5000)
followers <- get_followers("DarshanRavalDZ", n = 5000)
View(followers)
target_user <- "DarshanRavalDZ"
followers_number <- lookup_users(user = target_user)
View(followers_number)
follower_ids <- get_followers(target_user, n = 5000)$from_id
followers <- lookup_users(follower_ids)
screen_names <- followers$screen_name
View(screen_names)
Darshanraval_graph <- graph(screen_names)
write.graph(Darshanraval_graph, file = "Darshanraval_graph_network.graphml", format = "graphml")
save.image("C:/Users/nihar/OneDrive/Desktop/Griffith University/Trimester-1/BDA and SM/Assignment/Milestone-2/22052023.RData")
savehistory("C:/Users/nihar/OneDrive/Desktop/Griffith University/Trimester-1/BDA and SM/Assignment/Milestone-2/22052023h.Rhistory")
